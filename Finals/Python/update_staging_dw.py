"""
Created on Fri Feb 24 09:21:42 2023

@author: David Hurtgen

This program must be run each time new records are created to update the staging data warehouse.
It is the EXTRACT and LOAD portion of the Airflow DAG.
"""

import mysql.connector
import pandas as pd

# main function
def update_sdw():
    """
    Inserts new records for tables dimBand, flakeMembers, flakeMicUsed, factResults
    Data extracted from newly created .csv files generated by new_records_generator_alt.py
    Function for the EXTRACT and LOAD stage of create_extract_load_test.py
    """

    # import the .csv files and assign them to dataframes, i.e. EXTRACT
    bands = pd.read_csv('~/Documents/what-mic/CSV/Bands.csv', index_col=False)
    members = pd.read_csv('~/Documents/what-mic/CSV/Members.csv', index_col=False)
    mics_used = pd.read_csv('~/Documents/what-mic/CSV/MicsUsed.csv', index_col=False)
    facts = pd.read_csv('~/Documents/what-mic/CSV/Facts.csv', index_col=False)
    
    
    # connect to mysql database
    try: 
        mysql_conn = mysql.connector.connect(user='root',password='############', host='127.0.0.1',database='what_mic')
        print("Mysql connection established")
    except:
        print("Failed to connect to the staging data warehouse")


    cursor = mysql_conn.cursor()

    # insert the data into the staging data warehouse, i.e LOAD
    for i, row in bands.iterrows():
        SQL = "insert into what_mic.dimBand values (%s,%s,%s,%s);"
        cursor.execute(SQL, tuple(row))
        mysql_conn.commit()
    
    for i, row in members.iterrows():
        SQL = "insert into what_mic.flakeMembers values (%s,%s,%s);"
        cursor.execute(SQL, tuple(row))
        mysql_conn.commit()
    
    for i, row in mics_used.iterrows():
        SQL = "insert into what_mic.flakeMicUsed values (%s,%s,%s,%s,%s);"
        cursor.execute(SQL, tuple(row))
        mysql_conn.commit()
        
    for i, row in facts.iterrows():
        SQL = "insert into what_mic.factResults values (%s,%s,%s,%s,%s,%s,%s);"
        cursor.execute(SQL, tuple(row))
        mysql_conn.commit()
    
        
    mysql_conn.close()
    print("Mysql connection closed")


if __name__=="__main__":
    update_sdw()

# End of program